import evaluate from ".";
import { NumberProducingExpression } from "../../types/expressions";

const buildSumTree = (depth: number): NumberProducingExpression => {
  if (depth === 0) return 1;
  const branch = buildSumTree(depth - 1);
  return {
    "+": [branch, branch]
  };
};

const buildSingleSidedSumTree = (depth: number): NumberProducingExpression => {
  if (depth === 0) return 0;
  const branch = buildSingleSidedSumTree(depth - 1);
  return {
    "+": [1, branch]
  };
};

const buildSumString = (depth: number): string => {
  if (depth === 0) return " 1";
  const branch = buildSumString(depth - 1);
  return `(${branch} + ${branch})`;
};

export default async function run() {
  const nested = buildSumTree(10);
  const singleSided = buildSingleSidedSumTree(1024);
  const sumAsString = buildSumString(10);
  //console.log(sumAsString);

  console.time("Evaluate deeply nested expression");
  await evaluate(nested);
  console.timeEnd("Evaluate deeply nested expression");

  console.time("Evaluate deeply nested expression (single sided)");
  await evaluate(singleSided);
  console.timeEnd("Evaluate deeply nested expression (single sided)");

  console.time("Evaluate deeply nested expression (100x)");
  for (let i = 0; i < 100; i++) await evaluate(nested);
  console.timeEnd("Evaluate deeply nested expression (100x)");

  console.time("Native eval long expression");
  eval(sumAsString);
  console.timeEnd("Native eval long expression");

  console.time("Native interpret long expression");
  evaluate10DeepSum();
  console.timeEnd("Native interpret long expression");
}

// Constants
const evaluate10DeepSum = () =>
  1 +
  1 +
  (1 + 1) +
  (1 + 1 + (1 + 1)) +
  (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
  (1 +
    1 +
    (1 + 1) +
    (1 + 1 + (1 + 1)) +
    (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
  (1 +
    1 +
    (1 + 1) +
    (1 + 1 + (1 + 1)) +
    (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))))) +
  (1 +
    1 +
    (1 + 1) +
    (1 + 1 + (1 + 1)) +
    (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))))) +
  (1 +
    1 +
    (1 + 1) +
    (1 + 1 + (1 + 1)) +
    (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))))))) +
  (1 +
    1 +
    (1 + 1) +
    (1 + 1 + (1 + 1)) +
    (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
          (1 +
            1 +
            (1 + 1) +
            (1 + 1 + (1 + 1)) +
            (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))))))) +
  (1 +
    1 +
    (1 + 1) +
    (1 + 1 + (1 + 1)) +
    (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
          (1 +
            1 +
            (1 + 1) +
            (1 + 1 + (1 + 1)) +
            (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))))))) +
    (1 +
      1 +
      (1 + 1) +
      (1 + 1 + (1 + 1)) +
      (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
          (1 +
            1 +
            (1 + 1) +
            (1 + 1 + (1 + 1)) +
            (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))))) +
      (1 +
        1 +
        (1 + 1) +
        (1 + 1 + (1 + 1)) +
        (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
          (1 +
            1 +
            (1 + 1) +
            (1 + 1 + (1 + 1)) +
            (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))))) +
        (1 +
          1 +
          (1 + 1) +
          (1 + 1 + (1 + 1)) +
          (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
          (1 +
            1 +
            (1 + 1) +
            (1 + 1 + (1 + 1)) +
            (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))) +
          (1 +
            1 +
            (1 + 1) +
            (1 + 1 + (1 + 1)) +
            (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1))) +
            (1 +
              1 +
              (1 + 1) +
              (1 + 1 + (1 + 1)) +
              (1 + 1 + (1 + 1) + (1 + 1 + (1 + 1)))))))));
